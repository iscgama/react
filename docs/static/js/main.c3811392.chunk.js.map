{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","key","alt","GifGrid","setImages","useEffect","then","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,oCACA,0BAAMC,SAZY,SAAEC,GACpBA,EAAEC,iBACiB,KAAfJ,IACAF,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,OASd,2BACIK,KAAK,OACLC,MAAQP,EACRQ,SApBW,SAAEL,GACrBF,EAAeE,EAAEM,OAAOF,a,uBCNnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAA0B,IAAvBH,EAAsB,EAAtBA,MAAOV,EAAe,EAAfA,IAAKS,EAAU,EAAVA,GAIvC,OACI,yBAAKK,UAAU,QACX,yBACIC,IAAMf,EACNgB,IAAMP,EACNQ,IAAMP,IAEV,2BAAKA,KCTJQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEtB,EAA4BZ,mBAAS,IAArC,mBAAOyB,EAAP,KAAeQ,EAAf,KAYA,OATAC,qBAAW,WACPvB,EAASC,GACJuB,KAAMF,KACZ,CAAErB,IAOD,oCACA,4BAAMA,GACN,yBAAKgB,UAAU,aAEJH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACKQ,IAAMR,EAAIC,IACLD,UCtBpBc,EAAe,WACxB,MAAoCpC,mBAAS,CAAC,gBAA9C,mBAAOqC,EAAP,KAAmBtC,EAAnB,KAEA,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,4BAEQsC,EAAWhB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACQkB,IAAMlB,EACNA,SAAWA,U,MCX3C0B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c3811392.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handledChanged = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handledSubmit = ( e) => {\r\n        e.preventDefault();\r\n        if (inputValue !== '' ) {\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue(\"\");\r\n        }else {\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handledSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handledChanged }\r\n            />   \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=kaGDUuizoBrPkKxyPhghjpgNI5gWYAbT`;\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( { title, url, id } ) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img \r\n                src={ url }\r\n                key={ id }\r\n                alt={ title }\r\n            />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifts';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( setImages);\r\n    }, [ category ])\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        <div className=\"card-grid\">\r\n                {\r\n                   images.map( img => (\r\n                       <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                   ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                                key={ category }\r\n                                category={ category }\r\n                        />\r\n                    )\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}